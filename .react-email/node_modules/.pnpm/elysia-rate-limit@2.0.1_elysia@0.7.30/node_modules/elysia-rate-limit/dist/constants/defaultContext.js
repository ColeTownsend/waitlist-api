import { getNextResetTime } from '../services/getNextResetTime';
export class DefaultContext {
    init(options) {
        this.duration = options.duration;
        this.store = {};
        this.nextReset = getNextResetTime(options.duration);
        this.intervalId = setInterval(() => this.reset(), options.duration);
    }
    async increment(key) {
        const totalCount = (this.store[key] ?? 0) + 1;
        this.store[key] = totalCount;
        return {
            count: totalCount,
            nextReset: this.nextReset,
        };
    }
    async decrement(key) {
        const keyStore = this.store[key];
        if (keyStore)
            this.store[key] = keyStore - 1;
    }
    async reset(key) {
        if (typeof key === 'string')
            delete this.store[key];
        else
            this.store = {};
    }
    kill() {
        if (this.intervalId)
            clearInterval(this.intervalId);
    }
}
