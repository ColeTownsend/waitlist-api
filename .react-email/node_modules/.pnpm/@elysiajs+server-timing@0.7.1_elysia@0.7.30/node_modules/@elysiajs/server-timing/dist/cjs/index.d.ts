import { Elysia, type Context } from 'elysia';
type MaybePromise<T> = T | Promise<T>;
export interface ServerTimingOptions {
    trace?: {
        request?: boolean;
        parse?: boolean;
        transform?: boolean;
        beforeHandle?: boolean;
        handle?: boolean;
        afterHandle?: boolean;
        total?: boolean;
    };
    enabled?: boolean;
    allow?: MaybePromise<boolean> | ((context: Omit<Context, 'path'>) => MaybePromise<boolean>);
}
export declare const serverTiming: (options?: ServerTimingOptions) => Elysia<"", {
    request: {};
    store: {};
}, {
    type: {};
    error: {};
}, {}, {}, false>;
export default serverTiming;
